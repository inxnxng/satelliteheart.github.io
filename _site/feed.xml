<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Satellite Mode</title>
    <description>This is my CS blog</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 13 Nov 2020 15:43:40 +0900</pubDate>
    <lastBuildDate>Fri, 13 Nov 2020 15:43:40 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>record</title>
        <description>&lt;h3 id=&quot;1015&quot;&gt;1015&lt;/h3&gt;
&lt;p&gt;말로만 듣던 푸라닭의 블랙 올리브 치킨을 시켜먹었다.&lt;/p&gt;

&lt;p&gt;음식을 먹고 감동받은 게 되게 간만이였다. 너무 감동해서 다음 주에 또 시켜먹었는데 그 때도 맛있었다. 이제 좋은 일 있거나 힘든 일 있으면 이 치킨 시켜먹는걸로 약속.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/posts/1015chicken.jpg&quot; alt=&quot;치킨&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1023&quot;&gt;1023&lt;/h3&gt;
&lt;p&gt;결국 먹었다. 빕스. 8월에 사놨었던 쿠폰을 코로나 때문에 이래저래 못쓰다가 사회적 거리두기 단계가 내려가서 쏠랑 갔다왔다.&lt;/p&gt;

&lt;p&gt;레어로 주문해서 slice하기 힘들었지만 맛있었다. 진짜로 고기가 최고다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/meat.jpg&quot; alt=&quot;고기&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1104&quot;&gt;1104&lt;/h3&gt;
&lt;p&gt;며칠 전, 백만년만에 만난 윤아랑 먹은 우주 케이크.&lt;/p&gt;

&lt;p&gt;이제는 엄청 맛있다고 느껴지지는 않지만 커피와 마시기에는 딱 좋다. 그리고 친구들에게 새로 추천해줄 때에도 이만큼 좋은 케이크가 없다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/cake.jpg&quot; alt=&quot;케이크&quot; width=&quot;50%&quot; height=&quot;50%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;다시 보니까 또 먹고싶다.&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Nov 2020 10:47:20 +0900</pubDate>
        <link>http://localhost:4000/diary/cake/</link>
        <guid isPermaLink="true">http://localhost:4000/diary/cake/</guid>
        
        <category>food</category>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>finally</title>
        <description>&lt;p&gt;github blog를 완성하였다. 저번에는 어려워서 포기했지만 이래저래 필요성을 느꼈기에 오늘 마음먹고 끝내버렸다. 아직 카테고리를 수정하지 못하지만 기말고사 끝나고 파일 올리면서 수정해보도록 해야겠다. 그보다 GEM이 제일 신기하다. 세상이 많이 발전했구나.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout : post&lt;/code&gt; -&amp;gt; post, page 중 하나를 넣어 이것이 한 페이지에 속하는 블로그 포스트인지, 홈페이지를 구성하는 하나의 큰 페이지인지를 결정한다.
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;categories : articles&lt;/code&gt; -&amp;gt; 어느 페이지에 속하는지를 표시한다.&lt;/p&gt;

&lt;h3 id=&quot;참고-링크&quot;&gt;참고 링크&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://pnurep.github.io/blogging/github-page-minimal-mistakes/#&quot;&gt;minimal mistakes를 이용해 page 만들기&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://hahafamilia.github.io/howto/jekyll-github-mistakes-blog/&quot;&gt;CSS - SCSS 관련 설정하기&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://danggai.github.io/tags/#minimal-mistakes&quot;&gt;프로필 관련 설정&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://djkeh.github.io/articles/Hangul-test-jekyll-tips-kor/&quot;&gt;md 앞에 넣어줘야 하는 정보&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://moon9342.github.io/jekyll-rouge&quot;&gt;코드 블록 - rouge 테마 바꾸기&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;수정해야-할-것들&quot;&gt;수정해야 할 것들&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;1110
    &lt;ul class=&quot;task-list&quot;&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;카테고리 수정&lt;/li&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;sitemap.xml 설정&lt;/li&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;이미지 파일 넣기 확인&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;1113
    &lt;ul class=&quot;task-list&quot;&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;이미지 크기 조정, 폰트 더 줄이기&lt;/li&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; checked=&quot;checked&quot; /&gt;code block 테마&lt;/li&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;카테고리 더 추가하기&lt;/li&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;태그 관련된 페이지 추가하기&lt;/li&gt;
      &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;글쓰기 틀 만들기 -&amp;gt; &amp;lt;/br&amp;gt; 이거 작동안함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Nov 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/diary/finally/</link>
        <guid isPermaLink="true">http://localhost:4000/diary/finally/</guid>
        
        
        <category>diary</category>
        
      </item>
    
      <item>
        <title>C++ char 정리</title>
        <description>&lt;h1 id=&quot;char&quot;&gt;CHAR&lt;/h1&gt;

&lt;h2 id=&quot;1-pointer-선언&quot;&gt;1 Pointer 선언&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char* v;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;v는 문자, 문자열이 저장된 메모리의 첫 주소를 저장할 수 있는 포인터 변수&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char* v = &quot;문자열 상수 1&quot;;&lt;/code&gt; 초기화 했어도 코드 중에는 언제든 변경 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const char* v;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;v는 다시 문자열이 저장된 메모리의 첫주소를 저장할 수 있는 포인터 변수. &lt;strong&gt;v 주소 메모리의 내용은 변경 불가&lt;/strong&gt; 즉 v는 &lt;strong&gt;상수 문자열의 포인터변수&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;const의 대상이 v자체가 아니므로 v가 가리키는 주소는 변경 가능함&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const char* v = &quot;문자열 상수 1&quot;;&lt;/code&gt;로 초기화함. 이 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v = &quot;문자열 상수 2&quot;;&lt;/code&gt; 는 가능 하지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*v = &quot;문자열 상수 2&quot;;&lt;/code&gt;는 불가능. 이건 v 주소 메모리의 값을 변경하려 한 것이므로.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char* const v;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;v는 문자열이 저장된 메모리의 첫주소를 저장할 수 있는 포인터 변수&lt;/li&gt;
      &lt;li&gt;초기화할 때 한번 지정된 문자열 메모리 주소 변경 못함.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char* const v = &quot;문자열 상수1&quot;;&lt;/code&gt;로 초기화 했을 때, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v = &quot;문자열 상수2&quot;;&lt;/code&gt;는 불가능하단 소리임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-pointer&quot;&gt;2 Pointer&lt;/h2&gt;

&lt;p&gt;char형 포인터(문자열 표현 방법)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char str[20] = &quot;Good Morning!&quot;;&lt;/code&gt; 이는 배열을 기반으로 하는 변수 형태의 문자열 선언. 변수라고 하는 이유는 문자열의 일부를 변경할 수 있기 때문. 문자열 전체를 저장하는 배열.&lt;/p&gt;

&lt;p&gt;[G][o]…[!][\0]&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char* str2 = &quot;This is string&quot;;&lt;/code&gt;으로도 선언 가능. 이는 포인터를 기반으로 문자열을 선언한 것. 이렇게 선언하면 메모리 공간에 문자열 This is string이 저장되고 문자열의 첫번째 문자 T의 주소값이 반환된다. 그리고 이 반환 값은 포인터 변수 str2에 저장된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;char형 포인터로 선언하면 첫번째 문자의 주소값이 저장된다&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;str2—————&amp;gt;[&lt;strong&gt;T&lt;/strong&gt;his is string\0]&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt; &lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;char형 배열&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;char형 포인터&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;가리키는 위치 변경&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;불가능&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;가능&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열 내용 변경&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;가능&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;불가능&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;printf 함수는 문자열을 전달 받지 않고 문자열의 주소 값을 전달 받는 함수다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char* strArr[3] = {&quot;apple&quot;,&quot;banana&quot;,&quot;cinamon&quot;};&lt;/code&gt;으로 선언 시
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strArr[1]&lt;/code&gt;은 “banana”임.&lt;/p&gt;

&lt;h2 id=&quot;3-char-vs-string&quot;&gt;3 char vs string&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;생성
    &lt;ul&gt;
      &lt;li&gt;char : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char arr\[size\];&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;string : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string s;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;표준 입력 받아오기
    &lt;ul&gt;
      &lt;li&gt;char : 공백, 개행 무시. for문 돌려서 일일이 받아와도 되지만 배열 전체로 받아와도 된다&lt;/li&gt;
      &lt;li&gt;string : 공백, 개행 무시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;string&amp;gt;&lt;/code&gt; 필요&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;문자열 개수
    &lt;ul&gt;
      &lt;li&gt;char : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strlen(const char*);&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int size = strlen(arr);&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;string : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;length();&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int size = s.length();&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;표준 입력 읽어오기
    &lt;ul&gt;
      &lt;li&gt;char :
        &lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;streamsize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Elem&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Delim&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
              &lt;span class=&quot;c1&quot;&gt;//변수 주소, 최대 입력 가능 문자수, 종결 문자(default는 '\n')&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;string :
        &lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;getline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//위의 cin.getline과 비슷한 맥락&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//그러나 최대 입력 가능 문자수를 입력하지 않아도 된다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;참고 사이트&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://igotit.tistory.com/entry/char-const-char-char-const&quot;&gt;https://igotit.tistory.com/entry/char-const-char-char-const&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.blog.naver.com/jsky10503/221131378623&quot;&gt;https://m.blog.naver.com/jsky10503/221131378623&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.blog.naver.com/jsky10503/221133942782&quot;&gt;https://m.blog.naver.com/jsky10503/221133942782&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.blog.naver.com/jsky10503/221134770777&quot;&gt;https://m.blog.naver.com/jsky10503/221134770777&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mk28.tistory.com/127&quot;&gt;https://mk28.tistory.com/127&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 10 Nov 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/studying/cpp-char/</link>
        <guid isPermaLink="true">http://localhost:4000/studying/cpp-char/</guid>
        
        <category>cpp</category>
        
        <category>char</category>
        
        
        <category>studying</category>
        
      </item>
    
  </channel>
</rss>